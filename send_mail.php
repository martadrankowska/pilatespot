<?php
/**
 * PilateSpot ‚Äî Obs≈Çuga wysy≈Çania emaili z formularza kontaktu
 * 
 * Ten plik obs≈Çuguje POST request z formularza i wysy≈Ça dwa emaile:
 * 1. Email do klienta (podziƒôkowanie)
 * 2. Email do w≈Ça≈õciciela studia (powiadomienie)
 */

header('Content-Type: application/json; charset=utf-8');

// Za≈Çaduj konfiguracjƒô
require_once __DIR__ . '/config.php';

// Za≈Çaduj PHPMailer
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

require_once __DIR__ . '/PHPMailer/src/Exception.php';
require_once __DIR__ . '/PHPMailer/src/PHPMailer.php';
require_once __DIR__ . '/PHPMailer/src/SMTP.php';

// Zdefiniuj odpowiedzi
$response = [
    'success' => false,
    'message' => '',
    'errors' => []
];

try {
    // ==================== WALIDACJA ====================
    
    // Sprawd≈∫, czy request jest POST
    if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
        throw new Exception('Metoda ≈ºƒÖdania nie jest wspierana. U≈ºyj POST.');
    }
    
    // Pobierz dane z formularza - spr√≥buj zar√≥wno $_POST jak i JSON
    $name = '';
    $email = '';
    $message = '';
    
    // Je≈õli to form data
    if (!empty($_POST)) {
        $name = isset($_POST['name']) ? trim($_POST['name']) : '';
        $email = isset($_POST['email']) ? trim($_POST['email']) : '';
        $message = isset($_POST['message']) ? trim($_POST['message']) : '';
    }
    
    // Je≈õli to JSON (axios, fetch z JSON)
    if (empty($name) && empty($email) && empty($message)) {
        $json = file_get_contents('php://input');
        if (!empty($json)) {
            $data = json_decode($json, true);
            if ($data) {
                $name = isset($data['name']) ? trim($data['name']) : '';
                $email = isset($data['email']) ? trim($data['email']) : '';
                $message = isset($data['message']) ? trim($data['message']) : '';
            }
        }
    }
    
    // Debug - wy≈õwietl co otrzymali≈õmy
    error_log('Received data - Name: ' . $name . ', Email: ' . $email . ', Message length: ' . strlen($message));
    
    // Walidacja - nazwa
    if (empty($name)) {
        $response['errors'][] = 'Imiƒô jest wymagane.';
    } elseif (strlen($name) < 2) {
        $response['errors'][] = 'Imiƒô musi mieƒá co najmniej 2 znaki.';
    } elseif (strlen($name) > 100) {
        $response['errors'][] = 'Imiƒô nie mo≈ºe mieƒá wiƒôcej ni≈º 100 znak√≥w.';
    }
    
    // Walidacja - email
    if (empty($email)) {
        $response['errors'][] = 'Email jest wymagany.';
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $response['errors'][] = 'Email jest nieprawid≈Çowy.';
    }
    
    // Walidacja - wiadomo≈õƒá
    if (empty($message)) {
        $response['errors'][] = 'Wiadomo≈õƒá jest wymagana.';
    } elseif (strlen($message) < 10) {
        $response['errors'][] = 'Wiadomo≈õƒá musi mieƒá co najmniej 10 znak√≥w.';
    } elseif (strlen($message) > MAX_MESSAGE_LENGTH) {
        $response['errors'][] = 'Wiadomo≈õƒá nie mo≈ºe mieƒá wiƒôcej ni≈º ' . MAX_MESSAGE_LENGTH . ' znak√≥w.';
    }
    
    // Je≈õli sƒÖ b≈Çƒôdy walidacji
    if (!empty($response['errors'])) {
        http_response_code(400);
        $response['message'] = 'Proszƒô poprawiƒá b≈Çƒôdy w formularzu.';
        echo json_encode($response);
        exit;
    }
    
    // ==================== WYSY≈ÅANIE EMAILI ====================
    
    // Inicjalizuj PHPMailer
    $mail = new PHPMailer(PHPMAILER_DEBUG);
    
    // Ustawienia SMTP
    $mail->isSMTP();
    $mail->Host = PHPMAILER_HOST;
    $mail->Port = PHPMAILER_PORT;
    $mail->SMTPAuth = PHPMAILER_SMTP_AUTH;
    $mail->SMTPSecure = PHPMAILER_SMTP_SECURE;
    $mail->Username = PHPMAILER_USERNAME;
    $mail->Password = PHPMAILER_PASSWORD;
    
    // Kodowanie
    $mail->CharSet = 'UTF-8';
    
    // Adres nadawcy
    $mail->setFrom(PHPMAILER_FROM_EMAIL, PHPMAILER_FROM_NAME);
    
    // ==================== EMAIL 1: DO KLIENTA ====================
    
    $mail->ClearAddresses();
    $mail->addAddress($email, $name);
    
    $mail->Subject = '‚ú® Dziƒôkujemy za kontakt! ‚Äî PilateSpot';
    $mail->isHTML(true);
    
    // Za≈Çaduj szablon emaila dla klienta
    $customerTemplate = file_get_contents(__DIR__ . '/email_templates/customer-template.html');
    $mail->Body = str_replace(
        ['{name}', '{message}'],
        [$name, htmlspecialchars($message)],
        $customerTemplate
    );
    
    // Wersja tekstowa (fallback)
    $mail->AltBody = "Cze≈õƒá $name,\n\nDziƒôkujemy za wiadomo≈õƒá! Oddzwonimy do Ciebie wkr√≥tce.\n\nPozdrawiamy,\nZesp√≥≈Ç PilateSpot";
    
    // Wy≈õlij email do klienta
    if (!$mail->send()) {
        throw new Exception('Nie uda≈Ço siƒô wys≈Çaƒá emaila do Ciebie: ' . $mail->ErrorInfo);
    }
    
    // ==================== EMAIL 2: DO W≈ÅA≈öCICIELA ====================
    
    $mail->ClearAddresses();
    $mail->addAddress(OWNER_EMAIL, OWNER_NAME);
    
    $mail->Subject = 'üìß Nowa wiadomo≈õƒá z formularza kontaktu ‚Äî ' . $name;
    
    // Za≈Çaduj szablon emaila dla w≈Ça≈õciciela
    $ownerTemplate = file_get_contents(__DIR__ . '/email_templates/owner-template.html');
    $mail->Body = str_replace(
        ['{name}', '{email}', '{message}', '{date}'],
        [$name, $email, nl2br(htmlspecialchars($message)), date('d.m.Y o H:i')],
        $ownerTemplate
    );
    
    // Wersja tekstowa (fallback)
    $mail->AltBody = "Nowa wiadomo≈õƒá z formularza kontaktu:\n\nImiƒô: $name\nEmail: $email\nWiadomo≈õƒá:\n$message\n\nData: " . date('d.m.Y o H:i');
    
    // Wy≈õlij email do w≈Ça≈õciciela
    if (!$mail->send()) {
        throw new Exception('Nie uda≈Ço siƒô wys≈Çaƒá powiadomienia do w≈Ça≈õciciela: ' . $mail->ErrorInfo);
    }
    
    // ==================== SUKCES ====================
    
    $response['success'] = true;
    $response['message'] = 'Dziƒôkujemy! Wiadomo≈õƒá zosta≈Ça wys≈Çana. Odezwiemy siƒô do Ciebie wkr√≥tce.';
    http_response_code(200);
    
} catch (Exception $e) {
    // ==================== B≈ÅƒÑD ====================
    
    http_response_code(500);
    $response['message'] = 'Co≈õ posz≈Ço nie tak. Spr√≥buj ponownie p√≥≈∫niej.';
    $response['errors'][] = $e->getMessage();
    
    // Log b≈Çƒôdu (opcjonalnie)
    error_log('[PilateSpot] Email Error: ' . $e->getMessage());
}

// Wy≈õlij odpowied≈∫ JSON
echo json_encode($response);
exit;
?>
